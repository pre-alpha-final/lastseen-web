@model LastSeenWeb.Domain.Models.LastSeenItem
@using LastSeenWeb.Front.Pages.Components.Tooltip

<div class="popup-content">
	<form id="itemdata">
		<div class="panel-group" id="accordion">
			<div class="panel panel-default">
				<div class="panel-heading">
					<h4 class="panel-title">
						<a data-toggle="collapse" data-parent="#accordion" href="#collapse1">Status</a>
					</h4>
				</div>
				<div id="collapse1" class="panel-collapse collapse in">
					<div class="panel-body">
						@Html.HiddenFor(e => e.Id)

						<div class="line">
							<span class="name">Season:</span>
							<span class="input">@Html.TextBoxFor(e => e.Season, new { @class = "standard" })</span>
							<span class="info"></span>
						</div>

						<div class="line">
							<span class="name">Episode:</span>
							<span class="input">@Html.TextBoxFor(e => e.Episode, new { @class = "standard" })</span>
							<span class="info"></span>
						</div>

						<div class="line">
							<span class="name">Visit Url:</span>
							<span class="input">@Html.TextBoxFor(e => e.VisitUrl, new { @class = "standard" })</span>
							<span class="info">@await Component.InvokeAsync(nameof(Tooltip), new TooltipModel { Text = "Link to go to when 'Visit' button is pressed" })</span>
						</div>

						<div class="line">
							<span class="name">Unfinished:</span>
							<span class="input-short">@Html.CheckBoxFor(e => e.Unfinished, new { @class = "standard", onchange = "checkUnfinished(this)" })</span>
							<span class="info">@await Component.InvokeAsync(nameof(Tooltip), new TooltipModel { Text = "Check if You haven't finished watching the entire episode" })</span>
						</div>

						<div id="times" class="line" style="@(Model.Unfinished ? "" : "display: none;")">
							@Html.TextBoxFor(e => e.Hours, Model.Unfinished ? (object)new { @class = "unfinished" } : new { @class = "unfinished", @disabled = "disabled" }) h&nbsp;&nbsp;
							@Html.TextBoxFor(e => e.Minutes, Model.Unfinished ? (object)new { @class = "unfinished" } : new { @class = "unfinished", @disabled = "disabled" }) m&nbsp;&nbsp;
							@Html.TextBoxFor(e => e.Seconds, Model.Unfinished ? (object)new { @class = "unfinished" } : new { @class = "unfinished", @disabled = "disabled" }) s&nbsp;&nbsp;
						</div>
					</div>
				</div>
			</div>
			<div class="panel panel-default">
				<div class="panel-heading">
					<h4 class="panel-title">
						<a data-toggle="collapse" data-parent="#accordion" href="#collapse2">Config</a>
					</h4>
				</div>
				<div id="collapse2" class="panel-collapse collapse">
					<div class="panel-body">
						<div class="line">
							<span class="name">Name:</span>
							<span class="input">@Html.TextBoxFor(e => e.Name, new { @class = "standard" })</span>
							<span class="info"></span>
						</div>

						<div class="line">
							<span class="name">Image Url:</span>
							<span class="input">@Html.TextBoxFor(e => e.ImageUrl, new { @class = "standard" })</span>
							<span class="info"></span>
						</div>
					</div>
				</div>
			</div>
			<div class="panel panel-default">
				<div class="panel-heading">
					<h4 class="panel-title">
						<a data-toggle="collapse" data-parent="#accordion" href="#collapse3">Tracking</a>
					</h4>
				</div>
				<div id="collapse3" class="panel-collapse collapse">
					<div class="panel-body">
						Currently in development
					</div>
				</div>
			</div>
		</div>
	</form>
	<div class="update-button">
		<a class="btn button-spacing" href="javascript:void(0);" onclick="popupContentUpdate()">Update</a>
	</div>
</div>

<script type="text/javascript">
	async function popupContentUpdate() {
		await _popup.update($("#itemdata").serialize());
		location.reload();
	};

	function checkUnfinished(checkbox) {
		document.getElementById('Hours').disabled = !checkbox.checked;
		document.getElementById('Minutes').disabled = !checkbox.checked;
		document.getElementById('Seconds').disabled = !checkbox.checked;

		if (checkbox.checked === true) {
			$('#times').slideDown();
		} else {
			$('#times').slideUp();
		}
	};

	$('.standard').click(function () {
		this.select();
	});

	$('.unfinished').click(function () {
		this.select();
	});
</script>
